<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh8ACWAIYAAE9aT3NqI1RIGEc5Ds+2inNYLI95VnxREW9KEnxbKYdiLY9qMpl+VqCGYLeab4da
        HmpNJ6+GTLqNUsKXXs+mcYBoSK+SacCgdcWmfMqrg5lpL6ByOqZ6RMqgaodwU6mKZ2BAIHdeRGpXQ05B
        NHxrW7WejalhMIt1ZpJ9b6BZLWUyFFpEOMCllWowE3w6GYtCHXc6GlotF5lPKGVRR3NhWKmRha+YjKCG
        eqaNgYc8HnM1G5JEI7qflIRtZalOME4nGm9TSpxHLpl+eMViU71VTLJKRW8AAGALC04NDXwhIZIxMYct
        LaA6OqlCQrq6urW1ta+vr6mpqaOjo5ycnJaWlpKSkoeHh3d3d29vb0BAQC0tLQAAAP///wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQB
        AABcACwAAAAA8ACWAAAI/wC5CBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzPlyisaPHjyBDihw5MEkK
        kg+VoFzJsqVLgjByCNSh8iUXFUGY2NzJs+fEGC2UBGkSZIfMlkma+Djqs6nTp1xixFCxhEmTIkNksNRh
        NQjUr2BfxsihJMaSqyZ86FjZpO3asAOx9IBLN+NQJkumKtnLkWQRt3W5nDgRuLDEJHuZ7NWhY4kSJkGY
        glRShImLGHWvVDFcV0TEJUt0tNCRpPFeJT5ejLS6JEmMH3WjzOAMd0GCDRESOEwSWsVoFTFM78Acsm2T
        y1pgw41igzbcCCAYNICAkDDD4FVhhLTaVsmPH8RXzv9uOOXJFOdgPViAwMGDCoQFHAZnwuRtR+5tmRxR
        PlIEDYHWLXTFE09Qgd5XFkxgAQcgrIAQBNRdN5VSHl1lXBMvSFUQAx9BUAMKUDQ0Aw9QPBHggT5tYIEF
        ERTQoEE3AAFChAtJFUMQRdSEEY5FFBFEaBoShAJINzggRRQNQfDBEyGi6FQEEkygAQgqjDcQDRg0wJ9C
        ecUwwFBF2FUEEUUsoQJw4Q005EJAkOBQDzbwEIUDay4UAg5PWOFkUyFwIEEEEFA5A41clIBBCR40oCgH
        H7RokBJdctXWRUwMMUQRMLz2AxJpkkCCEAiRcAMULBBAwAdc3ICFQlDwQGIJhB7/NAMLQlQQwp4p/imB
        AmeqAMIM8ZGAAwYOOIDBBQ4suEECMSBRUAtBoNlYEzpKtAQRQxBx2aZaGNQqDgRpVgILUDBXww0fMDCD
        Zwn1wCSTSC5UARQV4NqUBCxyAEOvIIiArwUlOFBBAYoODIJUIDhLUHA62DifCxMpcdUQw/2ghRYKE3Sk
        DVbUUEOcNjRgQAgQrjDoDAIsBCIU5dbZLgsu2/vSAgpGwGuvKvwAwQYOSHDCwVP5isTQzRrksI1cJdEQ
        DD0O1VYRO7Rg8QgFIFCBB4xGYIMNJUQxxRUigADCdwNkMcAIAwxwMEM3EMhCCVLUsJABLIAr804RTCAB
        BxDg//zDFkh44ACgXtq46aZFF2Q4eFMt4dVClPUoeY46qIDEDyoECmEBIXzAgg0hAIB2Fmj/kHYWZg8w
        1ZYDecAuFzWw8IQTLJeQUAMVMMDD63dbJAIHETiU9wQM4ixQCCVMoMAKXqbt5aZpD2DQewIl9xoS9CnE
        xOSSN4Hm5VJtOrQKDjQwgxZlpx+9FiOMgH6QBl1wgUBARMECBuWR+99BcpZQgpu9s4gCIvABFqFqIQ1w
        wAQe4KszCQQCEyjBdGwUvQFcLmOKI8gPltCCIwzFBwhZAvd61ISGSSU5l8PYpmhWAdONAHVoG4DpBqAF
        0sUABNI7yAkyQIIV3AADGPgACP/a9oQonGggOGhVCY4YQIj4C0oTEBhDOJAgF/mKODSbQAIg8JoK5jAh
        aUKCaSDjg8cVRIQjvIyNkvMdjIkRShVwXxbYh760/WAEScJSCXhwvwwYAAQh4COpDFCQENwgCsy5QRMp
        8gEFRUkCsTpIBFbUNxU4SCAcmIAQgbOlNDFEC/Ohz1/MKBA0cm84hkMhElSoAOW9ZgUCuBjaQEkDDjRE
        BAXIwBMIkIH7VSAGM2hABobZJIGI4Ej+40HMFumQBE1gkoRTSAE+IIEGNChNEejACc7kSYm8JjgSs1AL
        zjJCEh7NIGKUQAc8QMMTfKwCWthCCGqAAQlsYCEQmIEHgDj/zAuUAAgjgEAILpABUynygTaIgqs8wMyJ
        BMwCUQKUlQzygQvoTQHXHMgC8hYoB14EPJzaXjm5RyYz2cggWWBABzoQgRBUwAA2cAAD3NcDEoRAOwop
        2Q0oQFAWfMADMVgBhBgwzAxgYCAiAJhCGzqRFUF0AhsIVDe5YIAMdOCZmmvWAqhZTaGugHoCEYBAK/CB
        sq5IgVE6CHg2FbmRjrBhCMGBRS/QAbQyoADiu16SQEBQgjKAiw0SKgSkwMsMhAB9yIvTeZgakUk+dQG9
        OogDMsABkongTEjYwgYmwFkXBUpsAWhARBuwgAMgoKMq0AEE4mMQxv1AB27lXhNysKUD/wqkAchSEApI
        kLNNAS4Lm0pSBfopMPCMoEEiEIEHCpoBG9QQC8zxGmMjQsUEWaACZwLBQeT3y8yJLbMhkMCfCpC7BliA
        rhawDScv9532fketDrtKbP+Sg6ne9gJS8EACcja0C27hbENziBB4KT8DbGEEKxDboCDQAF7CDAUfq4EQ
        9jddhzSgBhYYXOWmUkgGyC8CA8gc82Iwgo2K97wOuACxNrAC8ZmOvTI0HXgQstYb9YhM5WRCC+wrkAvs
        jr2HG1o8y8a6hBSAoMdC1kB8lVzO2eAJpWISFGzAxAor5AMxZWkCcpCALjPAAhgwKgYuGrScJYCzPYMS
        sjjArP4Obf+GcJ7hFwvS3uDcOMffTAjPGIC+F7t4CzUcQZERsoEO0DXJAxEbhEQg0BIRKAo4kIKVHyIC
        B2C4ZwlaaQdKQFcVEw+jXz3TD87MWQ5oYAG2Glt7gWxHJMT4cAkBTU4kh2PJleU7PJ7ABfDq3hHERAEL
        YICwQeABAwh7kmVlKBcaIBBndiADSh6IUBkNIRSw4NpQoPCkpzgBHhiLsxPAAAU8AIQCMPgCFkiA2KjE
        TZop8AHg89IFudXnGPOYILA1Dq0n14QdBzchEnCACkFQANyAm7MERYFc8aXACTzbAloYpqFsswAVM3sg
        MxDsoqdALihUedsHQXOKHY6sCsyAk2j//RMMtDsQKj4zr9GT8eUociH5jrAJzVplQozVgAJoIEq6PrhF
        Jyu7EFCpACmWAAMS7NIaGFYFBQBivQgCIQiIYAYzIEEJoICD5oBcIZ3TNRAdwAEGtLRvrwlBBjj7p7UN
        RLzKE5+r0+bqQTsknE8jYRBq3YSx6RwhKS7WSh1+VU0n2X9SSG5yQ0CysVW9AuuJgQgucPGCrMBkGScB
        14BwAiB8XYfGcoChOKuBG6pWbGfC7YI+wKzwVMCRXHSxHS3igppLrgVaaEKtd3CxLRTEA5B3gKG/TXi9
        7W0DwGc8EKr+q5L9YEYLjj0Epn6QBGf8BiiggVA/XxAUSMECDWBA/0WvOoEKIKFXYVNBCMYs3gggAH6M
        Ip4Ach5gsDPkLE6Tbwkv1tYcaQEECsAzn8YAxmJRCkI8HLAADwAhvYJ10bcu/ZJPaDMjVbcAOBAoC5Fg
        nANL3EcQPWAAHhACVycCAzV8KIA5ZwIhIGAA7DcB1gR/ebMA8JMQ7GFPC1EVTUAfF6IDFvMDkLIDxoE5
        CRBsIZAzMQABaLUBRtcCvgJ9VfeEVgeFECBoJTMDIJAALsIQJiMEJ3BJIAcEIUADJHACNAAE1AYhM1AB
        FvUBIgAEzNMrEAJmHJBJGwA0A7EBflIAN2RkfsIBy3JvQXAaiaEUOXMx5ycVMNAWQcApa2VHBf/wV4IG
        Pv1yMtFXdUuWTxDyQL8iNgUgAF6YUyIgACw3aTQQBbQDBTUAARpXdSqgUhPAAFIRatm1fh8QA4WGUYnD
        BRuwi3ZIdRuVN9CxSpwCVgThODvAF44BGfy1BUHQYjaSBDgCA6ojQ3aUc3JHgevyhA4YSQYRKC4SUEny
        QCBnA1JgAz1QASKQYKvYNwm0K14iNgRRAQ7gIpvVegQxhw9wQ6cFAR4QAcATAZMkAQlwOK9BjALxGMgI
        GovxGjBgFN+ENG2hKXM3jW6GBIqmeMnFjQqxfQ6hkUw1Gz0QAsuHdVHoiU+4AplkAXr4GqPIBcO2AoV2
        AK9BEHj4AA8whwz/ADx/ApDUxCzckmcEkZCg4RhK4BoW4wP7wjgO4wJFQFtbQnf9RRwGKRGs1YEKQQIf
        cFha8IRXp4LHlZErkDcWgCaqQxAXAFQgkEkugkEIgIcExAEKkABzOIcLoAAydD15NRBVoRiQMpSh4W8/
        kAPAkQRK6TA7UCYFkTZO4ZGLVGyqCAEWA4UU2D4EAYyGUxAYQAI3FAEOQCUYxB4QAgOQuTMK0Dfc8mYH
        8RjcQR9+iWsqoAS+ARTx5jA6MClW+RSMlmCWJEMmE4ULVhAW0AEMoDqeJAITwEUjMEmYNRBTqACMs0oW
        Y4gq9G/4poMXohiOwYPgsQMmJBWz6TAiVC23wtkUsnhHg5JcLTkQDrcBxFkQuYNDMQCQHMacdeSdFxOd
        92kxGFRKNZcfiyE+SrBjDrMwR4MjfTGeTYFa9zYQV7UAvdg6Mqg6/jiDvfVN+HkxGGp3XCAx3aOIhPkd
        QHJOioM0PeIDB4qgPIFaDcFZN8M6lTU0OiABpddJGEOcr3GfF8MQNvcXbbEEf6MFlSOgJ3UQDgMmPoKi
        PsE7YNdZYuNJArlKEGAzMykQ76ehDXFzTbAENASkRzODRiMVZ5GDlYOk/4ZRAQkgglTiSQA5kFGqh6xj
        pQuxo02TFxvETSIKRjYiMYtIFWQaGFwUVNxUEF2mACwJHPsJpwjRAnJaGcDRAorRpQsqEDaSWkpwOUXZ
        p4FxQ19VSJAZVKvEXxjRAtxjFfU1FcrYpVOJEA7TWyqgE5haF1ORnmsZPh2hAnIaBEKqAjkgpJP6EKvK
        KfPxqnQBHFNpOeCRqhOhqCPEBA8JqfPpq4aDNOIprIZhPRkhqrJlUqXxq14qH6tTmEnABJJBrYGBqA5h
        q9zjA0CjAz8CqRXxrZM6FkVgH+RqZYq6o0EAAtaTWvATqTVCPUfTqv1Wr1aWBCN0a7gGFEozEP66EP9g
        dTTQQkoEy0y1yW+lGhSZIhUtQBKr6hgTy1S1p2/HIRVcAZuMg6wdobHP+rFNxDQ8KqY2UhX+NqQjAawr
        y7J3kxT6hxe0KRoNqxE0i7N3U5sWkoNd4q4uQaxC2zv5Zhz14azdihI3u7ROciGV0Z0DKqkgoQO3kqgo
        S7WckRNPU0JIq7UfsRdgO13bQxRocqcCsbEfoRhpy1hGCxRtG7UgkT1zS7FmQqx2+rMXYZt72zt5MYyr
        ircgEa4nOhH0Org8QRMEebgP4aoVkQQLSxGOsbiOaxNR0yxacLdTixCJeBF7AbcTYbmb6xSLk7UOwRUW
        cZiVwRAt4AKJ8ahGcAT/qfsUaxQ0EQED0woRa3uiOrCrxdifRQkpuau7gGsQmtsQLWC5TjuIfKmD+OGf
        x5gDjZu8TJUD9IEfspWD0zu2OXgarHkEUnEEuKu9zNQXQJCM3DFS/mm5llsVRZkEO4a+z4u++pu+6isz
        lnsaNNADeKEEOZADRCmIS+ACLtC9SrC/6IsEDhzB+tu/TqKaDIyMlXMELbDBHMyEHYS+4UofAbrBD7y/
        Hry/QGEEFBwY7oudB4mdjOEb3KTBGyy/9qvB+7uXrJkEt6u/RnC7HLzChsG93fsXSiAaR0A0OqDBkNLB
        HdTBpGG5G/zDt2vB9JEE+/sslyvEdbHBODi+OZDE/xCMvmdxxB3cw0D8vDZsv16smr/LxQdyBElgwGz8
        A0dgORAsKfXRw1jsvHLMwHAsMz1sxyY8NEeAdwEqx29sEFhswVscyE6Cwy1gBByswgfptEPjsQ1xxBYM
        yb0TAw4clMahBBiDvAxxud37yJ4cyQlhHC4wNEygynF6xaustjm4H1VhrgRhHLJcy72TA7d8BPSxnzra
        o77MVLaqH7VZqRFhHM17zDJjFcxqFdmLEK6KH88MzbjCHWHKv3EqEO/by9q8J1ZRGT7izQrRBAMhOeI8
        zijyvtTSuuosEMbhzk1UvdlcEOE6EPVsz71Tve1MEPsMziXkz//stKa7EAPNBRxyO64G/c5O+xBbTB8b
        lM8PXRjWucjMSxD0cQRV/3HR5KyDAU0QkkEfMBCuCQ3StGHBKa0QMuF7DI0XRiC3Ko0eFvyzoAHTIjzT
        lFvTnGHBxBxrEKDTinHI8+zTP82aEHEZOk0tRo3UtJGMDu0Q3NHAZzHSUN0URNnSCjHQVf3HWW0YRInO
        Cj3Po4wEvBHWhUGUuiwQSUHP3fEDXK3WX5G5EfHWXDDKbU3XO8EXd23WbYFTfF0Xj2HRjAzY9THYgSHC
        d80EWyDNWK3YPJGDOyARTKAFVnGpkg0XYVrZEBGuP8Aaab3ZYBFOGn0Q4SrMzIoYpA0WInXajDzNTPAD
        rN3aUMEjhq3PlkEfMYAYc23bLxG8ja2aoGzKwO0Tzv/c2DqoAocM28dNEqMsEY/RFh300c/dExH9GdyR
        MAt93S9BtIL7EJLSBAIAwUft3S4BAdkNEY4akRCc2OjtEnhXzQzRvc0izItsGmgb3xixmssLzry9BXJc
        jMhoxdiZjBDD383cHRSRyr3dGjrcvRLOl3tBFvSt4OlszAhhHxE+4RJ+GgrplzYMyhhOETobzwSOH9YJ
        vhOekFLcwahb4hhx4jWBgx3an9hJxA2MvjKOEmHan91zweHkAugbAybd4yyBd/khwq1hwwNBFhzd00je
        EaO94jlouRN8d+KZ21OeEHzRAplV3LS75M7N0dVi3V1eEebrGm6tAuFav5E9EDRtXUpSnuaP4sbCi4M6
        MsZk3RBVcaK1bedLBuJsPMHjxMB9zAWlYRGgIeikixeq3OhcMNWOzhK9LOl1XulazeUI8bWaXhF4YRH7
        /en3wempaeqkvhKanepQgeqs/urO4eqwHhJlPuu2fuu4HkABAQA7
</value>
  </data>
</root>